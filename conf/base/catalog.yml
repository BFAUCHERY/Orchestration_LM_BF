# Here you can define all your datasets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://docs.kedro.org/en/stable/data/data_catalog.html

raw_images:
  type: MemoryDataset

train_images:
  type: yaml.YAMLDataset
  filepath: data/01_raw/data.yaml

yolo_data_path:
  type: pandas.CSVDataset  # ou MemoryDataSet si pas de fichier
  filepath: /tmp/yolo_data_path.csv  # peut être un dummy, Kedro a besoin d’un output

trained_model:
  type: pickle.PickleDataset
  filepath: data/02_model/yolo_model.pkl

evaluation_metrics:
  type: json.JSONDataset
  filepath: data/02_model/eval_metrics.json

input_image:
  type: pillow.ImageDataset
  filepath: data/01_raw/images/test/00000.png

crops:
  type: pickle.PickleDataset
  filepath: data/04_feature/crops.pkl

ocr_texts:
  type: pickle.PickleDataset
  filepath: data/05_model_input/ocr_texts.pkl

tess_config:
  type: pickle.PickleDataset
  filepath: data/02_intermediate/tess_config.pkl

ocr_evaluation:
  type: json.JSONDataset
  filepath: data/08_outputs/ocr_evaluation.json

detections:
  type: pickle.PickleDataset
  filepath: data/03_primary/detected_panels.pkl

model:
  type: orchestration_lm_bf.datasets.yolo_model_dataset.YOLOModelDataset
  filepath: model/yolov8n.pt

model_yolo:
  type: orchestration_lm_bf.datasets.yolo_model_dataset.YOLOModelDataset
  filepath: data/yolov8n.pt

yolo_predictions:
  type: json.JSONDataset
  filepath: data/08_outputs/yolo_predictions.json

ocr_text:
  type: json.JSONDataset
  filepath: data/08_outputs/ocr_output.json


roboflow_predictions_raw:
  type: json.JSONDataset
  filepath: data/05_model_output/roboflow_predictions.json
  versioned: false

ocr_crops:
  type: pickle.PickleDataset
  filepath: data/06_models/ocr_crops.pkl
  versioned: false

ocr_output:
  type: json.JSONDataset
  filepath: data/08_outputs/ocr_output.json
  versioned: false

  